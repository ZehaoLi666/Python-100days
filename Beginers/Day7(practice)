#Step 5

# from 


from replit import clear                         # 清除结果
import random



from hangman_words import word_list              # 从python文件中引入某一列表或功能
from logohangman_art import stages, logo


print(logo)
chosen_word = random.choice(word_list)           # 在列表中随机选择一个
word_length = len(chosen_word)

end_of_game = False                          # 假设一种情况
lives = 6


print(f'Pssst, the solution is {chosen_word}.')


display = []
for _ in range(word_length):
    display += "_"

guess_all = []

while not end_of_game:                         # while 用于判断一种情况，loop中，若如何某种条件，改变end_of_game = False or True , 用以结束loop
    guess = input("Guess a letter: ").lower()
    guess1 = list(guess)

     

    if guess in guess_all: 
      print("you have already guessed this letter, input a new one. ")

    guess_all = guess_all + guess1
    

    for position in range(word_length):
        letter = chosen_word[position]
        print(f"Current position: {position}\n Current letter: {letter}\n Guessed letter: {guess}")
        if letter == guess:
            display[position] = letter                   # replace list 

    if guess not in chosen_word:

        lives -= 1
        if lives == 0:
            end_of_game = True
            print("You lose.")

    print(f"{' '.join(display)}")


    if "_" not in display:
        end_of_game = True
        print("You win.")


    print(stages[lives])